Package.json 属性说明

"name": "my-project",
-包名. 它不能超过 214 个字符,只能是小写字母,并且必须是URL安全的(允许连字符和下划线,但 URL 中不允许使用空格或其他字符)

"version": "1.5.0",
-包的版本号.

"license": "ISC",
-许可证,MIT 或 ISC 之类的字符串

{
  "author": "iikonan",
  "contributors": [
    "zhangsan",
    "lisi"
  ]
}
-作者, 贡献者或组织

"scripts": {
	"start": "node index.js",
	"dev": "nodemon"
}
scripts 字段是 package.json 中的另一种元数据功能.scripts 属性接受一个对象,它的值为可以通过 npm run 运行的脚本,其键为实际运行的命令.这些通常是终端命令,我们把它们放入 scripts 字段,可以既可以记录它们又可以轻松地重用

"description": "Express server project using compression",
-包的描述.

homepage -包的官网 url .

"main": "src/index.js",
-main 字段指定了程序的主入口文件,require('moduleName') 就会加载这个文件. 这个字段的默认值是模块根目录下面的 index.js.

"keywords": ["server", "osiolabs", "express", "compression"]
-NPM 注册表会为该字段建立索引,能够在有人搜索软件包时帮助找到它们.数组中的每个值都是与你的程序包关联的一个关键字

"repository": {
	"type": "git",
	"url": "https://github.com/osiolabs/example.git"
}
你可以通过提供 repository 字段来记录项目代码所在的资源库.该字段是一个对象,用于定义源代码所在的 url 及其使用的版本控制系统的类型.对于开源项目,可能是以 Git 作为版本控制系统的 GitHub 或 Bitbucket

"dependencies": {
	"express": "^4.16.4",
    "compression": "~1.7.4"
}
这是 package.json 中最重要的字段之一,它列出了项目使用的所有依赖项（项目所依赖的外部代码）.使用 npm CLI 安装软件包时,它将下载到你的 node_modules/ 文件夹中,并将一个条目添加到你的依赖项属性中,注意软件包的名称和已安装的版本.

{
  "homepage": "https://ant.design"
}
我们打包的静态资源会部署在 CDN 上,为了让我们的应用知道去哪里加载资源,则需要我们设置一个根路径,这时可以通过 package.json 中的 homepage 字段设置应用的根路径.

{
  "browserslist": [
    "> 0.5%",
    "last 2 versions",
    "Firefox ESR",
    "not dead",
    "IE 11",
    "not IE 10"
  ]
}
指定该模板供浏览器使用的版本.Browserify 这样的浏览器打包工具,通过它就知道该打包那个文件