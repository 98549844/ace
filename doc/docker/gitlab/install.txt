https://blog.csdn.net/weixin_45707730/article/details/132022017

1. pull gitlab images
docker pull gitlab/gitlab-ce:latest

2. 启动gitlab命令,修改宿主机路径
# /Users/garlam/docker/gitlab/config:/etc/gitlab是docker中gitlab配置映射在主机中的位置，可自己改动(主机文件位置:docker文件位置)
# /Users/garlam/docker/gitlab/log:/var/log/gitlab是docker中gitlab日志映射在主机中的位置，可自己改动(主机文件位置:docker文件位置)
# /Users/garlam/docker/gitlab/data:/var/opt/gitlab是docker中gitlab数据映射在主机中的位置，可自己改动(主机文件位置:docker文件位置)
docker run -d -p 8888:80 -p 8443:443 -p 8822:22 \
--name gitlab \
--restart always \
--privileged=true \
-v /Users/garlam/docker/gitlab/config:/etc/gitlab \
-v /Users/garlam/docker/gitlab/log:/var/log/gitlab \
-v /Users/garlam/docker/gitlab/data:/var/opt/gitlab \
-v /Users/garlam/docker/gitlab/gitlab.rb:/etc/gitlab/gitlab.rb \
gitlab/gitlab-ce:latest


3. 仓库启动后，修改url地址，避免项目地址乱码
# 进入容器
docker exec -it gitlab bash
# 修改配置文件
vi /etc/gitlab/gitlab.rb
# 修改以下配置：
external_url 'http://XX.XX.XX.XX:XXXX'	# IP:端口
nginx['listen_port'] = 80	# gitlab自带nginx监听80端口进行访问
# 保存退出，重启配置(重启配置会自动重启gitlab)
gitlab-ctl reconfigure

4. 修改初始账号密码
# 进入已启动的gitlab容器
docker exec -it gitlab bash
# 链接数据库
gitlab-rails console -e production
# 等待链接成功后，获取用户
user = User.where(id:1).first
# 可以修改用户账号以及密码
user.username = 'root'
user.password = 'P@ssw0rd!'
# 保存修改后的数据,save后面不要忘记!的输入
user.save!
# 等gitlab页面自动部署好之后，访问上面external_url配置的地址，使用账号密码登录gitlab即可


----------------------------------------------------------------------------------------------------------------------

Docker安装gitlab-runner
1. 安装gitlab-runner最新版本
docker pull gitlab/gitlab-runner

2. 命令启动gitlab-runner
# 文件映射与gitlab一致，可自行修改
docker run -d  --privileged=true  --name gitlab-runner --restart always \
-v /Users/garlam/docker/gitlab/gitlab-runner/config:/etc/gitlab-runner \
-v /Users/garlam/docker/gitlab/gitlab-runner/docker.sock:/var/run/docker.sock \
-v /Users/garlam/docker/gitlab/gitlab-runner/docker:/usr/bin/docker \
gitlab/gitlab-runner

4. 进入gitlab-runner容器开始注册
# docker exec -it是docker进入容器的命令，这里的runner是上面docker启动容器时的名字，然后使用bash进入
docker exec -it runner bash
# 注册gitlab-runner，输入命令开始注册
gitlab-runner register
# 按照下图将信息补充完整即可，这样gitlab-runner就注册完成了

6. 编写项目中会.gitlab-ci.yml文件后，提交更改
stages:
- test	# 需要与创建runner实例时的标签一致，如果忘记了，可以去runner中查看
sast:	# 名字可以自定义
  stage: test	# 从stages中选择
  tags:	# 标签可以没有
    - test
  script:	# 执行的脚本，可以是sh，except等等
   - echo "Test .gitlab-ci.yml!"

