https://blog.csdn.net/ithaibiantingsong/article/details/82350352
https://www.51cto.com/article/650560.html


导出和导入容器
1. 导出容器意味着从容器的文件系统创建压缩文件,
   导出的文件保存为"gzip"文件
docker export container-name | gzip > container-name.gz
docker export 容器名 > ./全路径新容器名.tar

2. 在新服务器中, 这个gzip文件随后被导入到一个新容器中
zcat container-name.gz | docker import - container-name
docker import 容器文件.tar 容器名

保存和加载镜像
1. Docker镜像是应用程序的代码, 库, 配置文件等的包.
   Docker容器是由这些镜像创建的.
   可以使用"docker save"压缩镜像并将其迁移到新服务器
docker commit container-id image-name

2. 在新服务器中, 使用"docker load"将压缩镜像文件用于创建新镜像.
cat image-name.tar | docker load

迁移数据卷
1. Docker容器中的数据卷是共享目录, 其中包含特定于容器的数据. 卷中的数据是持久的, 在容器重新创建期间不会丢失. 
   使用导出或提交工具将Docker容器或镜像从一台服务器迁移到另一台服务器时, 不会迁移基础数据卷. 
   在这种情况下, 包含数据的目录将手动迁移到新服务器. 然后在新服务器创建容器, 引用该目录作为其数据卷. 
   另一个简单的方法是通过在" docker run”命令中传递" -volumes from”参数来备份和恢复数据卷.
docker run --rm --volumes-from datavolume-name -v $(pwd):/backup image-name tar cvf backup.tar /path-to-datavolume 

   这里, datavolume名称是/path/to/volume. 此命令提供数据卷的备份. 要指定工作目录,
   还可以指定-w/backup. 在/backup文件夹中生成的备份可以通过scp或ftp工具复制到新服务器.
   然后提取复制的备份并将其还原到新容器中的数据卷中.
docker run --rm --volumes-from datavolume-name -v $(pwd):/backup image-name bash -c "cd /path-to-datavolume && tar xvf /backup/backup.tar --strip 1"



迁移整个Docker容器
我们在这里看到的方法适用于单个容器. 但是将所有容器都要从一台服务器迁移到另一台服务器的情况下, 我们采用另一种方法. 
此方法包括将整个docker目录(“/var/lib/docker”)复制到新服务器. 为了使这种方法成功, 需要确定几个关键点. 
保留文件夹的权限和所有权. 
迁移前停止Docker服务. 
验证两台服务器中的Docker版本是否兼容. 
迁移前后验证容器列表和功能. 
环境变量和其他配置文件的路径. 
如果此方法由于任何故障而无法工作, 我们将配置自定义脚本以将容器和镜像从一台服务器迁移到另一台服务器. 

结论: Docker容器广泛应用于DevOps和基于web托管.
     今天我们讨论了Docker工程师如何将Docker容器迁移到我们管理的Docker基础设施中的另一台服务器的各种方法.