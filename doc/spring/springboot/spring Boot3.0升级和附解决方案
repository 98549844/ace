来源: https://www.6hu.cc/archives/98313.html

开启成长之旅！这是我参加「日新方案 12 月更文应战」的第1天,点击检查活动详情
本文根据 newbeemall 项目晋级Spring Boot3.0踩坑总结而来,附带更新阐明:
Spring-Boot-3.0-发布阐明
Spring-Boot-3.0.0-M5-发布阐明

1. 编译报错,import javax.servlet.*; 不存在
这个报错主要是Spring Boot3.0现已为所有依靠项从 Java EE 迁移到 Jakarta EE API,
导致 servlet 包名的修正,Spring团队这样做的原因,
主要是避免 Oracle 的版权问题,处理办法很简单,两步走:

添加 jakarta.servlet 依靠
<dependency>
    <groupId>jakarta.servlet</groupId>
    <artifactId>jakarta.servlet-api</artifactId>
</dependency>


2 修正项目内所有代码的导入依靠
修正前:
import javax.servlet.*
修正后:
import jakarta.servlet.*

2.1 附带的很多依靠包晋级,导致的部分代码写法过期报警
修正前:
<th:block th:include="admin/header :: header-fragment"/>
修正后:
<th:block th:insert="~{admin/header :: header-fragment}"/>

2.2 Thymeleaf晋级到3.1.0.M2,后端运用 thymeleafViewResolver 手动烘托网页代码报错
// 修正前 Spring Boot2.7:
WebContext ctx = new (request, response, request.getServletContext(), request.getLocale(), model.asMap());
html = thymeleafViewResolver.getTemplateEngine().process("mall/seckill-list", ctx);

// 修正后 Spring Boot3.0:
JakartaServletWebApplication jakartaServletWebApplication = JakartaServletWebApplication.buildApplication(request.getServletContext());
WebContext ctx = new WebContext(jakartaServletWebApplication.buildExchange(request, response), request.getLocale(), model.asMap());
html = thymeleafViewResolver.getTemplateEngine().process("mall/seckill-list", ctx);


3 很多第三方库关于 Spring Boot 的 starter 依靠失效,导致项目发动报错
博主晋级到3.0后,发现发动时,Druid 数据源开始报错,找不到数据源装备,便怀疑跟 Spring boot 3.0 更新有关

这儿直接给出原因: Spring Boot 3.0 中主动装备注册的 spring.factories 写法已抛弃,
改为了META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports 写法,
导致很多第三方 starter 依靠失效

这儿给出两个处理方案:
等候第三方库适配 Spring Boot 3.0
按照 Spring Boot 3.0要求,
在项目resources 下新建 META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports 文件,
手动将第三方库的 spring.factories 加到 imports 中,这样能够手动修正第三方库 spring boot starter 依靠失效问题


