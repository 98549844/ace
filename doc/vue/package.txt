{
  "name": "vue",
  "version": "0.0.0",
  "private": true,
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "preview": "vite preview"
  },
  "dependencies": {
    "vue": "^3.3.4"
  },
  "devDependencies": {
    "vite": "4.4.6",
    "@axios": "^1.4.0",

    @ 符号: 指定使用的是特定版本的包.
    例如, "vue": "^3.2.0" 表示使用 3.2.0 版本的 Vue.js 包.
    如果您不带 @ 符号, 则默认使用最新版本(即 *).

    ^ 符号: 指定使用的是兼容的最新版本.
    例如, "vue": "^3.2.0" 表示使用 3.x.x 版本的 Vue.js 包(其中 x 表示任何数字).
    这意味着您可以安装 3.2.1, 3.3.0, 3.4.0 等版本, 但不包括 4.0.0 版本或更高版本.

    @ 符号和 ^ 符号的区别在于, @ 符号指定了确切的版本号, 
    而 ^ 符号则指定了兼容的最新版本范围. 
    如果您的项目需要在某个特定版本的依赖项上运行, 
    并且您不希望在未经测试的情况下升级到新版本, 
    则应该使用 @ 符号. 
    如果您希望获得最新的功能和修复程序, 
    但仍希望确保与当前版本兼容, 则应该使用 ^ 符号. 

    需要注意的是, 
    如果您使用了 ^ 符号并且运行了 npm install 命令安装了依赖项, 
    那么在将来的安装中, NPM 可能会自动更新依赖项的版本, 
    以便保持与 ^ 符号指定的兼容版本范围相同. 
    如果您希望保持依赖项的版本不变, 
    请使用 @ 符号指定确切的版本号, 
    并在将来的安装中不要使用 --save 或 --save-dev 参数. 
  }
}
