shellscript格式要求

1.基本语法
1.以#!/bin/bash开头
2.要有可执行权限
    1.chmod u+x [文件名]
    1.1 ./文件名
    1.2 直接绝对路经径
    2.sh [文件名]
3.变量可以字母或"_"和数字组成,但不可以以数字开头
4.变量一般用大写

5.将命令的返回值赋值给变量
    A='date'
    A=$(date)

shell的变量
1.linux shell变量分系统变量和自定义变量
    系统变量 $HOME $PWD $SHELL $USER
    定义变量 变量名=值
    撤消变量 unset
    静态变量 readonly变量, 不能unset


2.设置环境变量
语法
export 变量名=变量值 将shell变量输出为环境变量/全局变量
source 配量文件
echo $变量名

注释单/多行
1.#
2. :<<!
    内容
    !

3.位置参数变量
1.命令行 sh hello.sh "garlam" 100
2.获取命令行参数
    $n n为参数位置, 以0开始
    $* 读取所有参数, 把参数看作一个整体
    $@ 读取所有参数, 把参数区别对待
    $# 命令行参数的数量

4.预定义变量
    1.$$ 当前进程的pid
    2.$! 后台运行的最后一个进程的pid
    3.$? 最后一个进程执行的返回状态, 返回值为0, 代表成功, 不为0代表不成功


5.运算符
语法
1.$((运算式));$[运算式]
2.expr m + n 加
3.expr m - n 减
4.expr m \* n 乘
5.expr m / n 除
6.expr m % n 取余
7.A=`expr m + n` 赋值给变量


6.条件判断
[ condition ] 注意前后要有空格
=0 true
>1 false

[ garlam ]  为true
[  ]          为false
[ condition ] && echo OK || echo notOK
条件满足,执行后面语句
非空返回true, 可用$?证验

判断语句
1.
= 字符比较/整数比较
-lt 小于
-le 小于等于
-eq 等于
-gt 大于
-ge 小于等于
-ne 不等于

2.
文件权限进行判断
-r
-w
-x

3.
文件类型判断
-f 文件存在并是一个常规文件
-e 文件存在
-d 文件存在并且是一个文件夹


7.流程控制
if基本语法
if [ 条件判断式 ]
    then
        代码
fi

或者
if [条件判断式]
    then
        代码
elif [ 条件判断式 ]
    then
        代码
fi


case基本语法
case $变量名 in
"v1")
;;
"v2")
;;
"v3")
;;
*) 以上都不是, 那执行*内代码
esac


8.read读取控制台输入
read [选项] [参数]
选项
-p 指定读取值时的提示符
-t 指定读取值时等待的时间t
参数
变量:指定读取值的变量名






















