server:
  port: 8088
  tomcat:
    uri-encoding: UTF-8
  servlet:
    encoding:
      charset: UTF-8

# mybatis 配置
mybatis:
  mapper-locations: classpath:com/mapper/xml/*.xml
  type-aliases-package: com/entity/dao/mybatis
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

#showSql
logging:
  level:
    #root logging mode
    root: info
    com:
      mapper: debug


spring:
  devtools:
    restart:
      enabled: true
      additional-paths: src/main/java

  mvc:
    static-path-pattern: /static/** # js ,css 等静态文件路径

  thymeleaf:
    cache: false
    mode: HTML
    encoding: UTF-8
    servlet:
      content-type: text/html
    template-resolver-order: 1
    check-template-location: true
    #  prefix: classpath:/templates/
    # suffix: .html

  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8

  servlet:
    multipart:
      enabled: true
      max-file-size: 50MB
      max-request-size: 50MB

  datasource:
    #driver-class-name: org.mariadb.jdbc.Driver
    #url: jdbc:mariadb://localhost:3306/ace?characterEncoding=UTF-8&useSSL=false&useTimezone=true&serverTimezone=GMT%2B8
    driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
    url: jdbc:log4jdbc:mariadb://localhost:3306/ace?characterEncoding=UTF-8&useSSL=false&useTimezone=true&serverTimezone=GMT%2B8
    username: root
    password: garlamau
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      minimum-idle: 5
      # 空闲连接存活最大时间，默认600000（10分钟）
      idle-timeout: 180000
      # 连接池最大连接数，默认是10
      maximum-pool-size: 10
      # 此属性控制从池返回的连接的默认自动提交行为,默认值：true
      auto-commit: true
      # 连接池名称
      pool-name: MyHikariCP
      # 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
      max-lifetime: 1800000
      # 数据库连接超时时间,默认30秒，即30000
      connection-timeout: 30000
      connection-test-query: SELECT 1

  jpa:
    hibernate:
      ddl-auto: update
      #create:
      #根据entity新建表, 原table不动
      #create-drop:
      #把表删了再重建
      #update:
      #第一次启动根据实体建立表结构，之后启动会根据实体的改变更新表结构，之前的数据都在
      #validate:
      #会验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，
      #但是会插入新值，运行程序会校验实体字段与数据库已有的表的字段类型是否相同，不同会报错
    #去掉WARN spring.jpa.open-in-view is enabled by default
    open-in-view: true
    #    show-sql: true
    properties:
      hibernate:
        format_sql: true
        # use_sql_comments: true
        # 对应的entity



  redis:
    # Redis服务器地址
    host: localhost
    # Redis服务器连接端口
    port: 6379

  rabbitmq:
    #producer
    addresses: localhost:5672
    connection-timeout: 15000
    username: garlam
    password: garlamau
    virtual-host: /



    #receiver
    #rabbitmq:
    #    addresses: 192.168.11.71:5672,192.168.11.72:5672,192.168.11.71:5673
    #    connection-timeout: 15000
    #    listener:
    #      # 最好不要在代码里写死配置信息，尽量使用这种方式也就是配置文件的方式
    #      # 在代码里使用 	${}	方式进行设置配置: ${spring.rabbitmq.listener.order.exchange.name}
    #order:
    #exchange:
    #durable: true
    #key: order.*
    #name: order-exchange
    #type: topic
    ## 表示消费者消费成功消息以后需要手工的进行签收(ack)，默认为auto
    #simple:
    #acknowledge-mode: manual
    #concurrency: 5
    #max-concurrency: 10
    #prefetch: 1
    #password: guest
    #username: guest
    #virtual-host: /


