server:
  port: 8088
  tomcat:
    uri-encoding: UTF-8
    connection-timeout: 60000
  servlet:
    encoding:
      charset: UTF-8
    #context-path: 配置上下文

# Sa-Token配置
sa-token:
  # token名称 (同时也是cookie名称)
  token-name: satoken
  # token有效期，单位s 默认30天, -1代表永不过期
  timeout: 2592000
  # token临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
  active-timeout: 1800
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-concurrent: false
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: false
  # token风格
  token-style: uuid
  # 是否输出操作日志
  is-log: true


#showSql
logging:
  level:
    root: info #root logging mode
    com.ace.mapper: debug #specify package log level
  charset:
    console: UTF-8


# mybatis 配置
mybatis:
  mapper-locations: classpath:com/ace/mapper/xml/*.xml
  #type-aliases-package: com/ace/entity/dao/mybatis
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl




spring:
  #main:
  #  lazy-initialization: true  # 不要打开懒加载, 会引起sa-token未能获取applicationContent上下文
  #配置为 true 表示所有 Bean 都将延迟初始化。可以一定程度上提高启动速度,但是第一次访问可能较慢
  application:
    name: "Project for Ace Application - Spring Boot 3"
  devtools:
    livereload: # 热加载静态文件
      port: 35731
    restart:
      enabled: false
      additional-paths: src/main/java

  mail:
    host: smtp.qq.com
    username: 87548744@qq.com
    password: pcwasirqmgpkcbbi
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
    default-encoding: UTF-8
    port: 465
    protocol: smtps

  mvc:
    static-path-pattern: /static/** # js ,css 等静态文件路径
    pathmatch:
      matching-strategy: ant_path_matcher
      #Failed to start bean 'documentationPluginsBootstrapper' 的解决方法
      #Spring Boot 2.6.X使用PathPatternMatcher匹配路径,
      #Swagger引用的Springfox使用的路径匹配是基于AntPathMatcher的,
      #添加配置spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER

  thymeleaf:
    cache: false
    mode: HTML
    encoding: UTF-8
    servlet:
      content-type: text/html
    template-resolver-order: 1
    check-template-location: true
    prefix: classpath:/templates/
    suffix: .html

  #    redirect to resource/templates/xxx/xxx.html
  #    Controller
  #    return "/xxx/xxx"

  jackson:
    date-format: yyyy-MM-dd HH:mm:ss

  servlet:
    multipart:
      enabled: true
      max-file-size: -1 #不限制文件大小 100MB
      max-request-size: -1 #不限制请求体大小 100MB
      location: "${java.io.tmpdir}" #临时IO目录
      resolve-lazily: false #不延迟解析
      file-size-threshold: 1MB # 超过1Mb, 就IO到临时目录

  #https://mysqlconnector.net/connection-options/
  #MySQL 8.0 Public Key Retrieval is not allowed 错误的解决方法
  #allowPublicKeyRetrieval=true

  datasource:
    #driver-class-name: org.mariadb.jdbc.Driver
    #url: jdbc:mariadb://localhost:3306/ace?characterEncoding=UTF-8&useSSL=false&useTimezone=true&serverTimezone=GMT%2B8
    #url: jdbc:mysql://localhost:3306/ace?characterEncoding=UTF-8&useSSL=false&useTimezone=true&serverTimezone=GMT%2B8
    url: jdbc:log4jdbc:mysql://localhost:3388/ace?characterEncoding=UTF-8&useUnicode=true&useSSL=false&useTimezone=true&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true
    #driver-class-name: com.mysql.jdbc.Driver # for mysql5.7
    #driver-class-name: com.mysql.cj.jdbc.Driver # for mysql8.0
    driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy #only support mysql5.7 driver class
    username: root
    password: root


    #    remote:
    #      #spring.datasource.url 数据库的 JDBC URL
    #      #spring.datasource.jdbc-url 用来重写自定义连接池
    #      jdbc-url: jdbc:log4jdbc:mariadb://localhost:3306/ace_remote?characterEncoding=UTF-8&useSSL=false&useTimezone=true&serverTimezone=GMT%2B8
    #      driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
    #      username: root
    #      password: garlamau

    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      minimum-idle: 5
      # 空闲连接存活最大时间，默认600000（10分钟）
      idle-timeout: 180000
      # 连接池最大连接数，默认是10
      maximum-pool-size: 10
      # 此属性控制从池返回的连接的默认自动提交行为,默认值：true
      auto-commit: true
      # 连接池名称
      pool-name: MyHikariCP
      # 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
      max-lifetime: 1800000
      # 数据库连接超时时间,默认30秒，即30000
      connection-timeout: 30000
      connection-test-query: SELECT 1

  jpa:
    hibernate:
      naming:
        #使用驼峰式命名生成table
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      ddl-auto: update
      #create:
      #根据entity新建表, 原table不动
      #create-drop:
      #把表删了再重建
      #update:
      #第一次启动根据实体建立表结构，之后启动会根据实体的改变更新表结构，之前的数据都在
      #validate:
      #会验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，
      #但是会插入新值，运行程序会校验实体字段与数据库已有的表的字段类型是否相同，不同会报错
    #去掉WARN spring.jpa.open-in-view is enabled by default
    open-in-view: true
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        schema_update:
          unique_constraint_strategy: RECREATE_QUIETLY
          # 默认配置是：先删除+后创建,RECREATE_QUIETLY: 遇到重复/不存在的约束时，不报错，直接删除旧约束重新创建新约束
          # https://blog.csdn.net/qq_40109075/article/details/125486015
        #use_sql_comments: true
        #对应的entity
    #  redis:
    #    # Redis服务器地址
    #    host: localhost
    #    # Redis服务器连接端口
    #    port: 6379
  data:
    redis:
      port: 6379
      host: localhost
      database: 0


  rabbitmq:
    #producer 生產者
    addresses: 192.168.1.100:5672
    connection-timeout: 15000
    username: admin
    password: admin
    virtual-host: /

    #receiver 消费者
    #rabbitmq:
    #    addresses: 192.168.11.71:5672,192.168.11.72:5672,192.168.11.71:5673
    #    connection-timeout: 15000
    #    listener:
    #      # 最好不要在代码里写死配置信息，尽量使用这种方式也就是配置文件的方式
    #      # 在代码里使用 	${}	方式进行设置配置: ${spring.rabbitmq.listener.order.exchange.name}
    #order:
    #exchange:
    #durable: true
    #key: order.*
    #name: order-exchange
    #type: topic
    #表示消费者消费成功消息以后需要手工的进行签收(ack)，默认为auto
    #simple:
    #acknowledge-mode: manual
    #concurrency: 5
    #max-concurrency: 10
    #prefetch: 1
    #password: guest
    #username: guest
    #virtual-host: /

#  kafka:
#    bootstrap-servers: 192.168.1.100:9092,192.168.1.100:9093,192.168.1.100:9094
#    #这个是kafka的地址,对应你server.properties中配置的
#    producer:
#      batch-size: 16384 #批量大小
#      acks: -1 #应答级别:多少个分区副本备份完成时向生产者发送ack确认(可选0、1、all/-1)
#      retries: 10 # 消息发送重试次数
#      #transaction-id-prefix: transaction
#      buffer-memory: 33554432
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
#      properties:
#        linger:
#          ms: 2000 #提交延迟
#          #partitioner: #指定分区器
#          #class: pers.zhang.config.CustomerPartitionHandler
#    consumer:
#      group-id: aceGroup #默认的消费组ID
#      enable-auto-commit: true #是否自动提交offset
#      auto-commit-interval: 2000 #提交offset延时
#      # 当kafka中没有初始offset或offset超出范围时将自动重置offset
#      # earliest:重置为分区中最小的offset;
#      # latest:重置为分区中最新的offset(消费分区中新产生的数据);
#      # none:只要有一个分区不存在已提交的offset,就抛出异常;
#      auto-offset-reset: latest
#      max-poll-records: 500 #单次拉取消息的最大条数
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      properties:
#        session:
#          timeout:
#            ms: 120000 # 消费会话超时时间（超过这个时间 consumer 没有发送心跳，就会触发 re-balance 操作）
#        request:
#          timeout:
#            ms: 18000 # 消费请求的超时时间
#    listener:
#      missing-topics-fatal: false # consumer listener topics 不存在时，启动项目就会报错
#    #  type: batch


springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    disable-swagger-default-url: true
  packages-to-scan: com.ace.restController

#  springboot admin client side
#  actuator for springboot admin heartbeat use
management:
  endpoints:
    web:
      exposure:
        include: '*'
  info:
    env:
      enabled: true


    #自定义springboot banner
    #  main:
    #    banner-mode: log
    #  banner:
    #    charset: utf-8
    #    image:
    #      location: banner.png
    #      bitdepth: 4
    #      height: 70
    #      width: 100
    #      invert: false
    #      margin: 2
    #      pixelmode: text
    #    location: banner.txt
