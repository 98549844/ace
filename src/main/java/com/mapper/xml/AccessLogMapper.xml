<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.AccessLogMapper">
    <resultMap id="BaseResultMap" type="com.models.entity.dao.AccessLog">
        <id column="log_id" jdbcType="BIGINT" property="logId"/>
        <result column="created_by" jdbcType="VARCHAR" property="createdBy"/>
        <result column="created_date" jdbcType="TIMESTAMP" property="createdDate"/>
        <result column="last_update_by" jdbcType="VARCHAR" property="lastUpdatedBy"/>
        <result column="last_update_date" jdbcType="TIMESTAMP" property="lastUpdateDate"/>
        <result column="version" jdbcType="INTEGER" property="version"/>
        <result column="access_time" jdbcType="TIMESTAMP" property="accessTime"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="operator" jdbcType="VARCHAR" property="operator"/>
    </resultMap>
    <sql id="Base_Column_List">
        log_id
        , created_by, created_date, last_update_by, last_update_date, version, access_time,
    description, `operator`
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from access_log
        where log_id = #{logId,jdbcType=BIGINT}
    </select>

    <select id="selectAll"  resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from access_log
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from access_log
        where log_id = #{logId,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="log_id" keyProperty="logId" parameterType="com.models.entity.dao.AccessLog"
            useGeneratedKeys="true">
        insert into access_log (created_by, created_date, last_update_by,
                                last_update_date, version, access_time,
                                description, `operator`)
        values (#{createdBy,jdbcType=VARCHAR}, #{createdDate,jdbcType=TIMESTAMP}, #{lastUpdatedBy,jdbcType=VARCHAR},
                #{lastUpdateDate,jdbcType=TIMESTAMP}, #{version,jdbcType=INTEGER}, #{accessTime,jdbcType=TIMESTAMP},
                #{description,jdbcType=VARCHAR}, #{operator,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" keyColumn="log_id" keyProperty="logId" parameterType="com.models.entity.dao.AccessLog"
            useGeneratedKeys="true">
        insert into access_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="createdBy != null">
                created_by,
            </if>
            <if test="createdDate != null">
                created_date,
            </if>
            <if test="lastUpdatedBy != null">
                last_update_by,
            </if>
            <if test="lastUpdateDate != null">
                last_update_date,
            </if>
            <if test="version != null">
                version,
            </if>
            <if test="accessTime != null">
                access_time,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="operator != null">
                `operator`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="createdBy != null">
                #{createdBy,jdbcType=VARCHAR},
            </if>
            <if test="createdDate != null">
                #{createdDate,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdatedBy != null">
                #{lastUpdatedBy,jdbcType=VARCHAR},
            </if>
            <if test="lastUpdateDate != null">
                #{lastUpdateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="version != null">
                #{version,jdbcType=INTEGER},
            </if>
            <if test="accessTime != null">
                #{accessTime,jdbcType=TIMESTAMP},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="operator != null">
                #{operator,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.models.entity.dao.AccessLog">
        update access_log
        <set>
            <if test="createdBy != null">
                created_by = #{createdBy,jdbcType=VARCHAR},
            </if>
            <if test="createdDate != null">
                created_date = #{createdDate,jdbcType=TIMESTAMP},
            </if>
            <if test="lastUpdatedBy != null">
                last_update_by = #{lastUpdatedBy,jdbcType=VARCHAR},
            </if>
            <if test="lastUpdateDate != null">
                last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="version != null">
                version = #{version,jdbcType=INTEGER},
            </if>
            <if test="accessTime != null">
                access_time = #{accessTime,jdbcType=TIMESTAMP},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="operator != null">
                `operator` = #{operator,jdbcType=VARCHAR},
            </if>
        </set>
        where log_id = #{logId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.models.entity.dao.AccessLog">
        update access_log
        set created_by       = #{createdBy,jdbcType=VARCHAR},
            created_date     = #{createdDate,jdbcType=TIMESTAMP},
            last_update_by   = #{lastUpdatedBy,jdbcType=VARCHAR},
            last_update_date = #{lastUpdateDate,jdbcType=TIMESTAMP},
            version          = #{version,jdbcType=INTEGER},
            access_time      = #{accessTime,jdbcType=TIMESTAMP},
            description      = #{description,jdbcType=VARCHAR},
            `operator`         = #{operator,jdbcType=VARCHAR}
        where log_id = #{logId,jdbcType=BIGINT}
    </update>
</mapper>